# To-Do
# Run action manually
# Pass release description
# Versioning


name: Release EOP on GitHub

on: [push]

permissions:
  issues: write
  pull-requests: write
  contents: write

env:
  COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

jobs:
  build-eop:
    permissions:
        contents: write
    runs-on: windows-latest
    steps:
    - uses: ilammy/msvc-dev-cmd@v1

    # Pull down latest source code and modules
    - name: "Checkout from latest commit: '${{ github.event.head_commit.message }}'"
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Update submodules recursively
      run: git submodule update --recursive --remote

    - name: Show checked out files
      run: ls -l
      shell: bash

    # Download and setup dependencies
    - name: Verify DirectX cache
      id:   dxsdk-cache
      uses: actions/cache@v1
      with:
       path: DXSDK
       key:  dxsdk-cache

    - name:  Download DirectX SDK if not cached
      if:    steps.dxsdk-cache.outputs.cache-hit != 'true'
      run:   |
            curl -L https://download.microsoft.com/download/a/e/7/ae743f1f-632b-4809-87a9-aa1bb3458e31/DXSDK_Jun10.exe -o _DX2010_.exe
            7z -y x _DX2010_.exe DXSDK
            rm -fR _DX*_ _DX*_.exe
      shell: bash

    - name: Install Visual Studio 2019 Community with Chocolatey
      run: choco install visualstudio2019community

    # Check cache for previously generated code
    - name: Verify M2TWEOP-Library cache
      id:   library-cache
      uses: actions/cache@v1
      with:
       path: M2TWEOP-Library
       key:  library-cache

    - name: Verify M2TWEOP-luaPlugin cache
      id:   luaPlugin-cache
      uses: actions/cache@v1
      with:
       path: M2TWEOP-luaPlugin
       key:  luaPlugin-cache

    - name: Verify documentationGenerator cache
      id:   documentationGenerator-cache
      uses: actions/cache@v1
      with:
       path: documentationGenerator
       key:  documentationGenerator-cache

    # Run build script
    - name: Run buildEOP.ps1
      run: |
        ./buildEOP.ps1
      env:
        DXSDK_DIR: ${{ github.workspace }}\DXSDK\

    - name: Show generated files
      run: ls -l
      shell: bash

      # If the latest commit message starts with 'Release', issue a release on GitHub
      if: "startsWith(github.event.head_commit.message, 'Release')"

      # Read version number from source code
    - name: Read release version info from source
      run: |
          echo "EOP_VERSION=$(./getEOPVersionInfo.ps1 "./M2TWEOP-library/M2TWEOP library/m2tweopConstData.h")"  | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      shell: powershell

    - name: Output EOP_VERSION
      run: |
        echo "${Env:EOP_VERSION}"

    - name: Rename generated zip to match EOP_VERSION
      run: |
        cp "M2TWEOP.zip" "${{ env.EOP_VERSION }}.zip"
      shell: bash

    - name: Release new EOP version on GitHub - ${{ env.EOP_VERSION }}
      uses: ncipollo/release-action@v1
      with:
        name: "${{ env.EOP_VERSION }}"
        tag: "${{ env.EOP_VERSION }}"
        artifacts: "${{ env.EOP_VERSION }}.zip"
        bodyFile: "./docs/releaseInfo/releaseDescription.md"
        token: ${{ secrets.GITHUB_TOKEN }}
        commit: "test-eop-release"
        allowUpdates: true